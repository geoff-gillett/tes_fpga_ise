
d.traces=import_Int32('teslib','signal_processor_TB','traces',5);
d.trigger=import_Int32('teslib','signal_processor_TB','triggers',2);
d.height=import_Int32('teslib','signal_processor_TB','heights',2);
d.maxima=import_Int32('teslib','signal_processor_TB','maximas',5);
d.minima=import_Int32('teslib','signal_processor_TB','minimas',2);
d.peakstart=import_Int32('teslib','signal_processor_TB','eventstarts',2);
d.cfdlow=import_Int32('teslib','signal_processor_TB','cfdlow',2);
d.cfdhigh=import_Int32('teslib','signal_processor_TB','cfdhigh',2);
d.raw=import_Int32('teslib','signal_processor_TB','raw',3);
d.filtered=import_Int32('teslib','signal_processor_TB','filtered',3);
d.slope=import_Int32('teslib','signal_processor_TB','slope',3);
d.pulse=import_Int32('teslib','signal_processor_TB','pulse',3);
d.pulsestart=import_Int32('teslib','signal_processor_TB','pulsestarts',2);
d.armed=import_Int32('teslib','signal_processor_TB','slopethreshxings',2);
d.cfderror=import_Int32('teslib','signal_processor_TB','cfderrors',1);
d.timeoverflow=import_Int32('teslib','signal_processor_TB','timeoverflows',1);
d.peakoverflow=import_Int32('teslib','signal_processor_TB','peakoverflows',1);
d.settings=import_Int32('teslib','signal_processor_TB','settings',1);
d.registers=interpret_settings(d.settings);
