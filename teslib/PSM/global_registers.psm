                    ;-----------------------------------------------------------
                    ; Engineer: Geoff Gillett
                    ; Date:12/11/2013 
                    ;
                    ; Design Name: TES_digitiser
                    ; Module Name: command_IO.psm
                    ; Project Name: teslib
                    ; Target Devices: KCPSM6
                    ; Tool versions: ISE 14.7
                    ;-----------------------------------------------------------
                    CONSTANT NUM_GLOBAL_REGS, 16'd      ;change to add registers 
                    CONSTANT ADC_ENABLES_ADDR_BIT, 07   
                    CONSTANT ADC_ENABLES_ADDR0, 10000000'b
                    CONSTANT FEATURES_ADDR2, 10000000'b
                    ;-----------------------------------------------------------
                    ; SUBROUTINE read_global_reg
                    ; Read 32 bit value from  address2,address1,address0
                    ; and send response
                    ;
                    ; Register addresses are all one-hot 
                    ; Assumes contiguous addresses 
                    ;-----------------------------------------------------------
   read_global_reg: CALL check_glbl_addr
                    JUMP Z, version                  ; (RTC)
                    JUMP NC, respond_decerr          ; not one-hot (RTC)
                    TEST s2, 03
                    JUMP Z, respond_decerr					 ; invalid address
                    TEST s2, 01
                    JUMP Z, respond_slverr					 ; not readable (RTC)
                    ; must be valid address
                    TEST address2, FEATURES_ADDR2		 ; trap read features
                    JUMP NZ, respond_features				 ; (RTC)
                    CALL read_register               
                    JUMP send_response               ; (RTC)
                    ;
                    ;-----------------------------------------------------------
                    ; SUBROUTINE write_global_reg
                    ; write 32 bit value in (value3,value2,value1,value0) to 
                    ; (address2,address1,address0) and send response
                    ;
                    ; Register addresses are all one-hot 
                    ;-----------------------------------------------------------
  write_global_reg: CALL check_glbl_addr
                    JUMP Z, respond_slverr           ; version is read only
                    JUMP NC, respond_decerr          ; not one-hot
                    TEST s2, 03               
                    JUMP Z, respond_decerr           ; invalid address
                    TEST s2, 02              
                    JUMP Z, respond_slverr           ; not writable
                    TEST address0, ADC_ENABLES_ADDR0 ; trap write to adc_enables
                    JUMP NZ, write_adc_enables      
                    CALL write_register              
                    JUMP send_response               ; (RTC)
                    ;
                    ;-----------------------------------------------------------
                    ; TABLE Global address map lookup table
                    ; used to test address validity and R/W access
                    ; format: address bit 0 access, ..., address bit 23 access
                    ; where access bit 0 indicates readable bit 1 writable
                    ;
                    ;-----------------------------------------------------------
TABLE glbl_access#, [1,3,3,3,3,3,3,3,3,3,3,0,2,2,0,0,0,0,0,0,0,0,0,1]'d           
       glbl_access: LOAD&RETURN s2, glbl_access#
                    ;
                    ;-----------------------------------------------------------
                    ; SUBROUTINE check_glbl_addr
                    ; checks access for global register
                    ;
                    ; RETURN flags and value in s2
                    ;   C  and NZ -> is one-hot s2=access
                    ;   NC and NZ -> more than one bit set s2=?
                    ;   NC and Z  -> no bits set s2=?
                    ;
                    ; USES s2,s4,s5
                    ;-----------------------------------------------------------
   check_glbl_addr: CALL onehot_address24
   									RETURN NC
   									RETURN Z
   									LOAD s5, glbl_access'upper
										LOAD s4, glbl_access'lower
										ADD s4, s2
										ADDCY s5, 00
                    CALL@ (s5, s4)
                    OR s4, 01										; reset z
                    HWBUILD s4                  ; set c
                    RETURN
                    
                    
                    
                    