                    ;-----------------------------------------------------------
                    ; Engineer: Geoff Gillett
                    ; Date:12/11/2013 
                    ;
                    ; Design Name: TES_digitiser
                    ; Module Name: ADC_IO
                    ; Project Name: teslib
                    ; Target Devices: KCPSM6
                    ; Tool versions: ISE 14.7
                    ;
                    ; Sets/gets ADC registers over SPI interface
                    ;-----------------------------------------------------------
                    ;
                    ;-----------------------------------------------------------
                    ; ADC (ADS62P49) SPI Addresses 
                    ;-----------------------------------------------------------
                    CONSTANT ADC_RESET_ADDR,          00
                    CONSTANT ADC_RESET,               10000000'b
                    CONSTANT ADC_READOUT,             00000001'b
                    CONSTANT ADC_STANDBY_ADDR,        3F
                    CONSTANT ADC_OUTMODE_ADDR,        41
                    CONSTANT FORBIDDEN_STANDBY_MASK,  01100000'b
                    ;
                    ;-----------------------------------------------------------
                    ; SUBROUTINE ADC_transact 
                    ;            send address0 and value0 to the ADC
                    ;
                    ; address1 - enable and MISO mask
                    ; address0 - chip address
                    ; value0   - data
                    ;
                    ; USES s0,s1,s2,s3,s4
                    ;-----------------------------------------------------------
      ADC_transact: LOAD s4, address1
										LOAD s2, address0
                    CALL ADC_SPI_transact
                    LOAD s2, value0
                    CALL ADC_SPI_transact
                    LOAD value0, s2
                    CALL SPI_disable
                    RETURN
                    ;
                    ;-----------------------------------------------------------
                    ; SUBROUTINE ADC_SPI_transact 
                    ;-----------------------------------------------------------
                    ; SPI transaction
                    ; s2 contains the data 
                    ; s4 contains the mask for the miso in SPI_IO_PORT
                    ;  
                    ; USES: s0,s1,s2,s3,s4
                    ;
                    ; NOTE:
                    ;	For the ADC SPI the first data bit is not shifted in at 
                    ; the falling edge after the last address bit is shifted out 
                    ; (on the rising edge) but the next falling after that.
                    ; 
                    ;  _____________            _____________
                    ;  |           |____________|           |
                    ;  ^           ^                        ^
                    ;  last        normal                   ADC SPI
                    ;  address     first data               first data
                    ;  bit         bit                      bit
                    ;
                    ; use SPI_byte_transact subroutine in SPI_IO.psm for normal
                    ; transfers
                    ;-----------------------------------------------------------
  ADC_SPI_transact: LOAD s1, 08            ;8-bits to transmit and receive
  next_ADC_SPI_bit: LOAD s0, s2            ;prepare next bit to transmit
                    AND s0, SPI_MOSI
                    OUTPUT s0, SPI_IO_PORT ;set mosi
                    CALL SPI_clk_pulse     ;pulse spi_clk High
                    INPUT s3, SPI_IO_PORT  ;read input bits
                    TEST s3, s4      			 ;bit -> carry flag assumes 1 enable
                    SLA s2                 ;shift data in and present next bit
                    SUB s1, 01             ;count bits
                    JUMP NZ, next_ADC_SPI_bit  ;repeat until last bit
                    RETURN 
                    ;     
                    ;-----------------------------------------------------------
                    ; SUBROUTINE enable reading and writing to the ADC SPI regs
                    ; USES s0,s1,s2,s3 
                    ;-----------------------------------------------------------
  ADC_write_enable: LOAD s2, 00
                    CALL ADC_SPI_transact
                    LOAD s2, 00
                    CALL ADC_SPI_transact
                    RETURN
                    ;
   ADC_read_enable: LOAD s2, 00
                    CALL ADC_SPI_transact
                    LOAD s2, ADC_READOUT
                    CALL ADC_SPI_transact
                    RETURN
                    ;
                    ;-----------------------------------------------------------
                    ; TABLE of ADC default settings
                    ; address, data, address, data, ...
                    ; the addresses are also used to validate commands
                    ; A value of FF terminates the table  
                    ;-----------------------------------------------------------
TABLE ADC_default1#,[00,80, 20,00, 3F,21, 40,08, 41,80, 44,00, 50,46, 51,00]
TABLE ADC_default2#,[52,00, 53,00, 55,00, 57,00, 62,00, 63,00, 66,00, 68,00]
TABLE ADC_default3#,[6A,00, 75,00, 76,00, FF]  
      ADC_defaults: LOAD&RETURN s2, ADC_default1#  
                    LOAD&RETURN s2, ADC_default2#  
                    LOAD&RETURN s2, ADC_default3#  
                    ;